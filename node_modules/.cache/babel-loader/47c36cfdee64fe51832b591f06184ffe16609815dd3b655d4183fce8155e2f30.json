{"ast":null,"code":"var _jsxFileName = \"/Users/addod/BlessedBites/blessedbites/src/recipes.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recipes = ({\n  endpoint,\n  query,\n  type,\n  onDataFetched\n}) => {\n  _s();\n  const [data, setData] = useState([]); // State to store fetched data\n  const [loading, setLoading] = useState(true); // State to show loading status\n  const [error, setError] = useState(null); // State to show errors\n\n  const url = query ? `https://dummyjson.com/${endpoint}/search?q=${query}` : `https://dummyjson.com/${endpoint}`;\n  useEffect(() => {\n    fetchData(endpoint);\n  }, [endpoint]);\n  const fetchData = async () => {\n    try {\n      const res = await fetch(url);\n      const result = await res.json();\n      onDataFetched(result);\n    } catch (err) {\n      console.error('Error: ', err);\n    }\n  };\n\n  // useEffect(() => {\n  // \tsetLoading(true);\n  //   setError(null);\n\n  // \tconst url = query \n  //         ? `https://dummyjson.com/${endpoint}/search?q=${query}`\n  //         : `https://dummyjson.com/${endpoint}`;\n\n  // \t// Fetch data when component mounts\n  // \tfetch(url) \n  // \t\t.then((res) => {\n  // \t\t\tif (!res.ok) {\n  // \t\t\t\tthrow new Error('Network response was not ok');\n  // \t\t\t}\n  // \t\t\treturn res.json();\n  // \t\t})\n  // \t\t.then((data) => {\n  // \t\t\tconsole.log(\n  // \t\t\t\t// data.recipes.filter((recipe) => recipe.mealType.includes('Breakfast'))\n  // \t\t\t\tdata.recipes\n  // \t\t\t);\n  // \t\t\tsetData(data.recipes)// setData(data.recipes.filter(recipe => recipe.id === 10 || recipe.id === 35 || recipe.id === 47)); // Update data state\n  // \t\t\tsetLoading(false); // Set loading to false after data is fetched\n  // \t\t})\n  // \t\t.catch((error) => {\n  // \t\t\tsetError(error); // Set error state if there’s an error\n  // \t\t\tsetLoading(false);\n  // \t\t});\n  // }, [endpoint, query]);\n\n  // if (loading) return <p>Loading...</p>;\n  // if (error) return <p>Error: {error.message}</p>;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"data passed\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n\n  // return (\n  // \t<div>\n  // \t\t<h1>Fetched Data</h1>\n  // \t\t<ul>\n  // \t\t\t{data.map((item) => (\n  // \t\t\t\t<li key={item.id}>\n  // \t\t\t\t\t{item.name} {item.id-1}\n  // \t\t\t\t\t<img className=\"w-60\" src={item.image} alt={item.name} />\n  // \t\t\t\t</li>\n  // \t\t\t))}\n  // \t\t</ul>\n  // \t</div>\n  // );\n};\n_s(Recipes, \"C4fiAW6C7RZgaKDoEXQgZpbuUZg=\");\n_c = Recipes;\nexport default Recipes;\nvar _c;\n$RefreshReg$(_c, \"Recipes\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Recipes","endpoint","query","type","onDataFetched","_s","data","setData","loading","setLoading","error","setError","url","fetchData","res","fetch","result","json","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/addod/BlessedBites/blessedbites/src/recipes.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst Recipes = ({ endpoint, query, type, onDataFetched }) => {\r\n\tconst [data, setData] = useState([]); // State to store fetched data\r\n\tconst [loading, setLoading] = useState(true); // State to show loading status\r\n\tconst [error, setError] = useState(null); // State to show errors\r\n\r\n\t\tconst url = query \r\n          ? `https://dummyjson.com/${endpoint}/search?q=${query}`\r\n          : `https://dummyjson.com/${endpoint}`;\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchData(endpoint);\r\n\t}, [endpoint]);\r\n\r\n\tconst fetchData = async () => {\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tconst result = await res.json();\r\n\t\t\tonDataFetched(result)\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error('Error: ', err);\r\n\t\t}\r\n\t}\r\n\r\n\t// useEffect(() => {\r\n\t// \tsetLoading(true);\r\n  //   setError(null);\r\n\r\n\t// \tconst url = query \r\n  //         ? `https://dummyjson.com/${endpoint}/search?q=${query}`\r\n  //         : `https://dummyjson.com/${endpoint}`;\r\n\r\n\t// \t// Fetch data when component mounts\r\n\t// \tfetch(url) \r\n\t// \t\t.then((res) => {\r\n\t// \t\t\tif (!res.ok) {\r\n\t// \t\t\t\tthrow new Error('Network response was not ok');\r\n\t// \t\t\t}\r\n\t// \t\t\treturn res.json();\r\n\t// \t\t})\r\n\t// \t\t.then((data) => {\r\n\t// \t\t\tconsole.log(\r\n\t// \t\t\t\t// data.recipes.filter((recipe) => recipe.mealType.includes('Breakfast'))\r\n\t// \t\t\t\tdata.recipes\r\n\t// \t\t\t);\r\n\t// \t\t\tsetData(data.recipes)// setData(data.recipes.filter(recipe => recipe.id === 10 || recipe.id === 35 || recipe.id === 47)); // Update data state\r\n\t// \t\t\tsetLoading(false); // Set loading to false after data is fetched\r\n\t// \t\t})\r\n\t// \t\t.catch((error) => {\r\n\t// \t\t\tsetError(error); // Set error state if there’s an error\r\n\t// \t\t\tsetLoading(false);\r\n\t// \t\t});\r\n\t// }, [endpoint, query]);\r\n\r\n\t// if (loading) return <p>Loading...</p>;\r\n\t// if (error) return <p>Error: {error.message}</p>;\r\n\r\n\treturn <div>data passed</div>\r\n\r\n\t// return (\r\n\t// \t<div>\r\n\t// \t\t<h1>Fetched Data</h1>\r\n\t// \t\t<ul>\r\n\t// \t\t\t{data.map((item) => (\r\n\t// \t\t\t\t<li key={item.id}>\r\n\t// \t\t\t\t\t{item.name} {item.id-1}\r\n\t// \t\t\t\t\t<img className=\"w-60\" src={item.image} alt={item.name} />\r\n\t// \t\t\t\t</li>\r\n\t// \t\t\t))}\r\n\t// \t\t</ul>\r\n\t// \t</div>\r\n\t// );\r\n};\r\n\r\nexport default Recipes;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,OAAO,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,KAAK;EAAEC,IAAI;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC7D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEzC,MAAMe,GAAG,GAAGV,KAAK,GACP,yBAAyBD,QAAQ,aAAaC,KAAK,EAAE,GACrD,yBAAyBD,QAAQ,EAAE;EAE9CL,SAAS,CAAC,MAAM;IACfiB,SAAS,CAACZ,QAAQ,CAAC;EACpB,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACH,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;MAC5B,MAAMI,MAAM,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC/Bb,aAAa,CAACY,MAAM,CAAC;IACtB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACbC,OAAO,CAACT,KAAK,CAAC,SAAS,EAAEQ,GAAG,CAAC;IAC9B;EACD,CAAC;;EAED;EACA;EACC;;EAED;EACC;EACA;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA,oBAAOnB,OAAA;IAAAqB,QAAA,EAAK;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;;EAE7B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACD,CAAC;AAACnB,EAAA,CAvEIL,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AAyEb,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}